Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/inspectionProfiles/Project_Default.xml	(revision 12569bed0817ee22fb5541a039243671cbc0a289)
+++ .idea/inspectionProfiles/Project_Default.xml	(revision )
@@ -2,9 +2,16 @@
   <profile version="1.0">
     <option name="myName" value="Project Default" />
     <option name="myLocal" value="true" />
+    <inspection_tool class="AndroidLintInvalidId" enabled="false" level="ERROR" enabled_by_default="false" />
     <inspection_tool class="AndroidLintRelativeOverlap" enabled="false" level="WARNING" enabled_by_default="false" />
+    <inspection_tool class="AndroidLintRtlCompat" enabled="false" level="ERROR" enabled_by_default="false" />
     <inspection_tool class="AndroidLintRtlHardcoded" enabled="false" level="WARNING" enabled_by_default="false" />
     <inspection_tool class="AndroidLintRtlSymmetry" enabled="false" level="WARNING" enabled_by_default="false" />
+    <inspection_tool class="AndroidLintUseCompoundDrawables" enabled="false" level="WARNING" enabled_by_default="false" />
     <inspection_tool class="AndroidLintUselessParent" enabled="false" level="WARNING" enabled_by_default="false" />
+    <inspection_tool class="LoggerInitializedWithForeignClass" enabled="false" level="WARNING" enabled_by_default="false">
+      <option name="loggerClassName" value="org.apache.log4j.Logger,org.slf4j.LoggerFactory,org.apache.commons.logging.LogFactory,java.util.logging.Logger" />
+      <option name="loggerFactoryMethodName" value="getLogger,getLogger,getLog,getLogger" />
+    </inspection_tool>
   </profile>
 </component>
\ No newline at end of file
Index: app/src/main/assets/kholagy/arabic/_1_groob/coptic_01.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/assets/kholagy/arabic/_1_groob/coptic_01.txt	(revision )
+++ app/src/main/assets/kholagy/arabic/_1_groob/coptic_01.txt	(revision )
@@ -0,0 +1,8 @@
+الصلاة الربانية	
+اللَّهُم اجْعلنا مُستحِقين أنْ نقولَ بِشكرٍ
+أبانا الذي في السَّمَواتِ، لِيتَقدس اسْمكَ. ليأتِ مَلكوتُكَ. 
+لتَكن مَشيئَتُكَ، كما في السّماءِ كَذلك على الأرْضِ. خُبزَنا الذي للغدِ اعطِنا اليومَ. 
+واغفِر لنا ذنوبَنا كما نغْفر نحنُ أيضّا للمذنبينَ إلينا. 
+ولا تُدخِلنا في تَجرِبةٍ. لكن نجّنا مِنْ الشّريرِ. 
+بالمسيحِ يسوعُ ربُّنا، لأنَّ لَكَ المُلكَ والقوةَ والمجدَ إلى الأبدِ. 
+آمين.
Index: app/src/main/assets/kholagy/arabic/_1_groob/02.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/assets/kholagy/arabic/_1_groob/02.txt	(revision )
+++ app/src/main/assets/kholagy/arabic/_1_groob/02.txt	(revision )
@@ -0,0 +1,2 @@
+صلاة الشكر
+فَلْنشْكُرّ صَانِعَ الخَيراتِ الرَّحُومَ الله أبَا رَبِّنَا وإلهِنَا ومُخَلِصَنا يَسُوعِ المسِيحِ. لأنَّهُ سَتَرنَا، وأعَانَنَا، وحَفِظَنا، وقَبِلَنا إليهِ، وأشْفَقَ عَلينَا، وعَضَّدنَا، وأَتَى بنا إلى هَذِهِ السَّاعَة. هُو أيْضاً فَلْنَسْأَلَهُ أنْ يَحْفَظَنا فى هَذَا اليَومِ المقَدَّسِ وكُلِّ أيَّامِ حَيَاتنَا بكلِّ سَلامِ. الضَّابِطُ الكُلّ الرَّبُ إلَهنَا. أيُّهَا السَّيِدُ الرَّبُّ الإلَه ضَابطُ الكُلِّ أبُو ربِّنَا وإلهنَا ومُخَلصَّنَا يَسُوعِ المسِيح نَشْكرُكَ عَلَى كُلِّ حالٍ، ومِنْ أجْل كلِّ حَالٍ، وفى كُلِّ حالٍ، لأنَّكَ سَترْتَنا، وأعَنْتَنا، وحفِظْتنَا، وقَبلْتنَا إليْكَ، وأشْفَقْت عَلينا، وعَضَّدْتَنَا، وأتَيتَ بِنَا إلىَ هَذِه السَّاعةِ. من أجْلِ هَذَا نَسْألُ ونَطْلبُ مِنْ صَلاحِكَ يَامُحبَّ البَشَر، امْنَحنَا أنْ نُكْملَ هذا اليَوْمَ المقَدَّسَ وكلّ أيَّامِ حَياتِنَا بِكلِّ سَلامٍ مَعَ خَوفِكَ، كُلُّ حَسَدٍ، وكلُّ تَجربَةٍ. وكلُّ فِعْلِ الشَّيْطانِ، ومُؤامَرةِ النَّاسِ الأشْرارِ، وقِيام الأعْدَاءِ الخَفيِّينَ والظَّاهِرينَ، إنْزَعهَا عنَّا وعَنْ سَائِرِ شَعْبكَ وعَنْ مَوضِعِكَ المقَدَّسِ هَذا. أمَّاَ الصَّالِحاتُ والنَّافعاتُ فَارزُقْنا إيَّاهَا. لأنَّكَ أنْتَ الذِى أعْطَيتَنا السُّلْطانَ أنْ ندوسَ الحَيَّاتِ والعَقارِبَ وكُلَّ قوَّةِ العَدوِّ. ولا تُدْخِلنَا فى تَجربَةٍ، لَكنْ نَجِّنا مِنَ الشِّرِّيرِ. بالنِّعْمةِ والرَّأْفَاتِ ومَحبَّة البَشرِ اللَّواتِى لإبْنِك الوَحيدِ ربِّنا وإلهِنَا ومُخلِّصِنا يَسُوعِ المسيحِ. هَذَا الذِى مِنْ قِبَلِه الَمجْدُ والإكْرام والعزَّةُ والسُّجودُ تَلِيقُ بكَ مَعهُ مَعُ الرُّوحِ القُدُسِ الَمحْيى المسَاوِى لَكَ الآنَ وكلَّ أوَانٍ وإلىَ دَهرِ الدُّهُورِ. آمين.
Index: app/src/main/java/baselyous/com/copticsmedia/mediaTasks/tasks/factory/MediaTaskFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/baselyous/com/copticsmedia/mediaTasks/tasks/factory/MediaTaskFactory.java	(revision 12569bed0817ee22fb5541a039243671cbc0a289)
+++ app/src/main/java/baselyous/com/copticsmedia/mediaTasks/tasks/factory/MediaTaskFactory.java	(revision )
@@ -1,5 +1,6 @@
 package baselyous.com.copticsmedia.mediaTasks.tasks.factory;
 
+
 import baselyous.com.copticsmedia.mediaTasks.MediaDetailActivity;
 import baselyous.com.copticsmedia.mediaTasks.MediaDetailFragment;
 import baselyous.com.copticsmedia.mediaTasks.tasks.agpeya.AgpeyaDetailActivity;
@@ -11,7 +12,6 @@
 
 /**
  * Created by Ihab Baselyous on 03.10.2015.
- *
  */
 public class MediaTaskFactory {
     public static final int AGPEYA = 0;
Index: app/src/main/java/baselyous/com/copticsmedia/mediaTasks/MediaDetailFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/baselyous/com/copticsmedia/mediaTasks/MediaDetailFragment.java	(revision 12569bed0817ee22fb5541a039243671cbc0a289)
+++ app/src/main/java/baselyous/com/copticsmedia/mediaTasks/MediaDetailFragment.java	(revision )
@@ -5,6 +5,7 @@
 import android.content.res.Resources;
 import android.graphics.Color;
 import android.os.Bundle;
+import android.support.annotation.NonNull;
 import android.support.v4.app.Fragment;
 import android.support.v4.view.ViewPager;
 import android.util.TypedValue;
@@ -35,6 +36,7 @@
 
 
     public static final String CONTROLLER_BACKGROUND_COLOR = "com.baselyous.copticMedia.shared.preferences.controller.view.background.color";
+    private static final String IS_STARTED = "is_task_already_selected_and_no_need_to_start_it_again";
     private ViewPager mViewPager;
     private Spinner languageSpinner;
     private Spinner bookContentsSpinner;
@@ -47,7 +49,7 @@
     private SectionsPagerAdapter mSectionsPagerAdapter;
     private ImageView sun;
     private ImageView moon;
-    private TextView updateContents;
+    private ImageView updateContents;
 
 
     public MediaDetailFragment() {
@@ -59,12 +61,15 @@
         return TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP, value, r.getDisplayMetrics());
     }
 
+    protected abstract int getTaskIndex();
+
+    protected abstract String getItemAssetDirectory(int index);
+
     /**
      * Mandatory empty constructor for the fragment manager to instantiate the
      * fragment (e.g. upon screen orientation changes).
      */
 
-    protected abstract int getTask();
 
     protected abstract MediaContents getMediaContents(String language, String itemClicked);
 
@@ -77,32 +82,42 @@
         initSpinnersWithDefaults();
         setOnSpinnerChangeListener();
         setOnUpdateBtnClickListener();
+        setViewsOnClickListener();
         return rootView;
     }
 
     private void initSpinnersWithDefaults() {
         String defaultLanguage = MainActivityFragment.languageSelected(getActivity());
-        updateContents(defaultLanguage, "paker");
+        updateContents(defaultLanguage, getRootElement());
     }
 
+    @NonNull
+    public abstract String getRootElement();
+
     @Override
     public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
+        if (savedInstanceState == null || !savedInstanceState.getBoolean(IS_STARTED)) {
-        selectTaskContent();
-    }
+            selectTaskContent();
+        }
+    }
 
     @Override
+    public void onSaveInstanceState(Bundle outState) {
+        outState.putBoolean(IS_STARTED, true);
+        super.onSaveInstanceState(outState);
+    }
+
+    @Override
     protected void loadBookItemSelected(String language, String itemClicked, int index) {
         updateContents(language, getItemAssetDirectory(index));
         //bookContentsSpinner.setSelection(index);
     }
 
-    protected abstract String getItemAssetDirectory(int index);
-
     private void updateContents(String defaultLanguage, String book) {
         MediaContents contents = getMediaContents(defaultLanguage.toLowerCase(), book);
         updateViewPagerContents(contents);
-        updateSpinners(contents);
+        updateSpinners(defaultLanguage, contents);
     }
 
     private void setOnSpinnerChangeListener() {
@@ -131,9 +146,9 @@
         });
     }
 
-    private void updateSpinners(MediaContents contents) {
-        updateLanguageSpinner();
-        updateBookSpinner(getBookContents((String) languageSpinner.getSelectedItem()));
+    private void updateSpinners(String defaultLanguage, MediaContents contents) {
+        updateLanguageSpinner(defaultLanguage);
+        updateBookSpinner(getBookContents(defaultLanguage));
         updateBookSubContents(contents);
     }
 
@@ -145,14 +160,14 @@
         }
     }
 
-    private void updateLanguageSpinner() {
+    private void updateLanguageSpinner(String defaultLanguage) {
         if (languageSpinner != null) {
             String[] languages = getResources().getStringArray(R.array.languages);
             ArrayAdapter<String> spinnerAdapter = new ArrayAdapter<>(getActivity(), R.layout.spinner_custom_text, languages);
             languageSpinner.setAdapter(spinnerAdapter);
-            String defaultValue = MainActivityFragment.languageSelected(getActivity());
+           /* String defaultValue = MainActivityFragment.languageSelected(getActivity());*/
             for (int i = 0; i < languages.length; i++) {
-                if (languageSpinner.getItemAtPosition(i).equals(defaultValue)) {
+                if (languageSpinner.getItemAtPosition(i).equals(defaultLanguage)) {
                     languageSpinner.setSelection(i);
                 }
             }
@@ -163,6 +178,7 @@
         if (bookContentsSpinner != null) {
             ArrayAdapter<String> spinnerAdapter = new ArrayAdapter<>(getActivity(), R.layout.spinner_custom_text, bookContents);
             bookContentsSpinner.setAdapter(spinnerAdapter);
+
         }
     }
 
@@ -172,7 +188,7 @@
             mViewPager.setAdapter(null);
         }
 
-        mSectionsPagerAdapter = new SectionsPagerAdapter(getActivity(), getTask(), contents);
+        mSectionsPagerAdapter = new SectionsPagerAdapter(getActivity(), contents, getTaskIndex());
         mViewPager.setAdapter(mSectionsPagerAdapter);
         mViewPager.setOnPageChangeListener(new ViewPager.OnPageChangeListener() {
             @Override
@@ -212,9 +228,9 @@
         moon = (ImageView) rootView.findViewById(R.id.dark);
         increaseFontsize = (TextView) rootView.findViewById(R.id.increaseFontSize);
         decreaseFontsize = (TextView) rootView.findViewById(R.id.decreaseFontSize);
-        updateContents = (TextView) rootView.findViewById(R.id.updateContents);
-        setViewsOnClickListener();
+        updateContents = (ImageView) rootView.findViewById(R.id.updateContents);
 
+
     }
 
     protected void initController() {
@@ -233,36 +249,39 @@
     }
 
     private void changeTextColorAndBackground(boolean value) {
-        Fragment fragment = mSectionsPagerAdapter.getFragmentStack().get(mViewPager.getCurrentItem());
-        TextView textView = ((PlaceholderFragment) fragment).getTextView();
+
+        for (Fragment fragment : mSectionsPagerAdapter.getFragmentStack()) {
-        View rootView = ((PlaceholderFragment) fragment).getRootView();
+            View rootView = ((PlaceholderFragment) fragment).getRootView();
-        textView.setTextColor(value ? Color.WHITE : Color.BLACK);
-        rootView.setBackgroundColor(value ? Color.BLACK : Color.WHITE);
-        controlsView.setBackgroundResource(value ? R.drawable.gradient_light : R.drawable.gradient);
+            rootView.setBackgroundColor(value ? Color.BLACK : Color.WHITE);
+            controlsView.setBackgroundResource(value ? R.drawable.gradient_light : R.drawable.gradient);
+            List<TextView> textViewList = ((PlaceholderFragment) fragment).getTextViewList();
+            for (TextView textView : textViewList)
+                textView.setTextColor(value ? Color.WHITE : Color.BLACK);
+        }
 
         if (getActivity() != null) {
             SharedPreferences.Editor editor = getEditor(getActivity());
             editor.putInt(PlaceholderFragment.TEXT_VIEW_COLOR, value ? Color.WHITE : Color.BLACK);
             editor.putInt(PlaceholderFragment.ROOT_VIEW_BACKGROUND_COLOR, value ? Color.BLACK : Color.WHITE);
             editor.putInt(CONTROLLER_BACKGROUND_COLOR, value ? R.drawable.gradient_light : R.drawable.gradient);
-
             editor.commit();
         }
 
-
     }
 
     private void changeTextFontSize(boolean isIncrease) {
         float px = getPx(getActivity(), 1);
         Fragment fragment = mSectionsPagerAdapter.getFragmentStack().get(mViewPager.getCurrentItem());
-        TextView textView = ((PlaceholderFragment) fragment).getTextView();
+        List<TextView> textViewList = ((PlaceholderFragment) fragment).getTextViewList();
+        for (TextView textView : textViewList) {
-        if (textView != null) {
-            float currentSize = textView.getTextSize();
-            textView.setTextSize(TypedValue.COMPLEX_UNIT_PX, isIncrease ? (currentSize + px) : (currentSize - px));
-            if (getActivity() != null) {
-                SharedPreferences.Editor editor = getEditor(getActivity());
-                editor.putFloat(PlaceholderFragment.TEXT_VIEW_SIZE, textView.getTextSize());
-                editor.commit();
+            if (textView != null) {
+                float currentSize = textView.getTextSize();
+                textView.setTextSize(TypedValue.COMPLEX_UNIT_PX, isIncrease ? (currentSize + px) : (currentSize - px));
+                if (getActivity() != null) {
+                    SharedPreferences.Editor editor = getEditor(getActivity());
+                    editor.putFloat(PlaceholderFragment.TEXT_VIEW_SIZE, textView.getTextSize());
+                    editor.commit();
+                }
             }
         }
     }
Index: app/src/main/assets/kholagy/arabic/salawat.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/assets/kholagy/arabic/salawat.txt	(revision )
+++ app/src/main/assets/kholagy/arabic/salawat.txt	(revision )
@@ -0,0 +1,10 @@
+صلاة باكر
+صلاة الساعة الثالثة
+صلاة الساعة السادسة
+صلاة الساعة التاسعة
+صلاة الغروب
+صلاة النوم
+صلاةالستار
+صلاة نصف الليل الخدمة الاولى
+صلاة نصف الليل الخدمة الثاتية
+صلاة نصف الليل الخدمة الثالثة
Index: app/src/main/assets/kholagy/arabic/_1_groob/01.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/assets/kholagy/arabic/_1_groob/01.txt	(revision )
+++ app/src/main/assets/kholagy/arabic/_1_groob/01.txt	(revision )
@@ -0,0 +1,8 @@
+الصلاة الربانية	
+اللَّهُم اجْعلنا مُستحِقين أنْ نقولَ بِشكرٍ
+أبانا الذي في السَّمَواتِ، لِيتَقدس اسْمكَ. ليأتِ مَلكوتُكَ. 
+لتَكن مَشيئَتُكَ، كما في السّماءِ كَذلك على الأرْضِ. خُبزَنا الذي للغدِ اعطِنا اليومَ. 
+واغفِر لنا ذنوبَنا كما نغْفر نحنُ أيضّا للمذنبينَ إلينا. 
+ولا تُدخِلنا في تَجرِبةٍ. لكن نجّنا مِنْ الشّريرِ. 
+بالمسيحِ يسوعُ ربُّنا، لأنَّ لَكَ المُلكَ والقوةَ والمجدَ إلى الأبدِ. 
+آمين.
Index: app/src/main/java/baselyous/com/copticsmedia/mediaTasks/tasks/MediaContents.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/baselyous/com/copticsmedia/mediaTasks/tasks/MediaContents.java	(revision 12569bed0817ee22fb5541a039243671cbc0a289)
+++ app/src/main/java/baselyous/com/copticsmedia/mediaTasks/tasks/MediaContents.java	(revision )
@@ -15,20 +15,46 @@
  */
 public class MediaContents {
 
-    private List<Media> mediaList = new ArrayList<>();
+    private List<Media> languageContentMediaList = new ArrayList<>(); //for arabic english german french
+    private List<Media> copticContentMediaList = new ArrayList<>();
+    private List<Media> languageCopticCombinedMediaList = new ArrayList<>();
     private List<String> titleList = new ArrayList<>();
 
-    public List<Media> getMediaList() {
-        return mediaList;
+    public List<Media> getCopticContentMediaList() {
+        return copticContentMediaList;
     }
 
-    public void setMediaList(List<Media> mediaList) {
-        this.mediaList = mediaList;
+    public void setCopticContentMediaList(List<Media> copticContentMediaList) {
+        this.copticContentMediaList = copticContentMediaList;
     }
 
-    public void addToMediaList(Media media) {
-        mediaList.add(media);
+    public List<Media> getLanguageCopticCombinedMediaList() {
+        return languageCopticCombinedMediaList;
+    }
+
+    public void setLanguageCopticCombinedMediaList(List<Media> languageCopticCombinedMediaList) {
+        this.languageCopticCombinedMediaList = languageCopticCombinedMediaList;
+    }
+
+    public List<Media> getLanguageContentMediaList() {
+        return languageContentMediaList;
+    }
+
+    public void setLanguageContentMediaList(List<Media> languageContentMediaList) {
+        this.languageContentMediaList = languageContentMediaList;
+    }
+
+    public void addToLanguageMediaList(Media media) {
+        languageContentMediaList.add(media);
         titleList.add(media.getTitle());
+    }
+
+    public void addToCopticMediaList(Media media) {
+        copticContentMediaList.add(media);
+    }
+
+    public void addToLanguageCopticCombinedMediaList(Media media) {
+        languageCopticCombinedMediaList.add(media);
     }
 
     public List<String> getTitleList() {
Index: app/src/main/java/baselyous/com/copticsmedia/mediaTasks/TaskContentSelector.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/baselyous/com/copticsmedia/mediaTasks/TaskContentSelector.java	(revision 12569bed0817ee22fb5541a039243671cbc0a289)
+++ app/src/main/java/baselyous/com/copticsmedia/mediaTasks/TaskContentSelector.java	(revision )
@@ -34,7 +34,7 @@
             if (intent.hasExtra("task")) {
                 String task = intent.getExtras().getString("task");
                 if (task != null && task.equals("agpeya")) {
-                    TaskListAdapter adapter = new TaskListAdapter(getTaskList(intent.getIntegerArrayListExtra("icons")), getApplicationContext());
+                    TaskListAdapter adapter = new TaskListAdapter(getTaskList(intent.getIntegerArrayListExtra("icons")), getApplicationContext(), true);
                     setListAdapter(adapter);
                 } else {
                     ArrayAdapter<String> adapter = new ArrayAdapter<>(getApplicationContext(), android.R.layout.simple_list_item_1, contentList);
Index: app/src/main/assets/kholagy/arabic/_1_groob/03.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/assets/kholagy/arabic/_1_groob/03.txt	(revision )
+++ app/src/main/assets/kholagy/arabic/_1_groob/03.txt	(revision )
@@ -0,0 +1,2 @@
+المزمور الخمسون
+إرْحَمنِى يَا الله كَعَظيمِ رَحْمتِكَ، ومِثْل كَثْرةِ رَأفتِكَ تَمْحُو إثْمِى. تَغْسلُنِى كَثيراً مِنْ إثْمِى، ومِنْ خَطيَّتِى تُطهَّرنِى. لأنِّى عارفٌ بإثْمِى، وخَطيَّتِى أمَامِى فى كلِّ حينٍ. لَكَ وحْدَك أخْطأْت، والشَّرُّ قدامَكَ صَنعْتُ. لِكىْ تَتَبرَّرَ فى أقْوالِكَ. وتَغْلبَ إذَا حَاكمْت. لأنِّى هَا أنَذَا بالاثْمِ حُبلَ بِى، وبالَخَطايَا وَلَدتْنِى أمِّى. لأنَّكَ هَكَذا قَدْ أحْبَبتُ الحقَّ، إذْ أوْضَحتَ لِى غَوامِضَ حِكْمتِكَ ومَسْتورَاتِها. تَنضَحُ عَلىَّ بِزُوفَاكَ فأطَّهَّرُ، تَغْسلُنِى فَأبْيضُّ أكْثَر مِنَ الثَّلجِ، تَسْمعُنِى سُرُوراً وفَرحاً، فتَبْتهجُ عِظامِى المنْسَحقةُ. أصْرِفْ وجْهَكَ عَنْ خَطايَاىَ، وأمْحُ كلَّ اثَامِى. قَلبِاً نَقياً أخْلقْ فىَّ يَا الله، ورُوحاً مُسْتَقيماً جدِّدهُ فى أحْشَائِى. لا تَطْرحْنِى مِنْ قُدَّامَ وجْهكَ، ورُوحكَ القُدُّوسِ لا تَنْزعْهُ مِنِّى. امْنَحْنِى بَهْجةَ خَلاصِكَ، وبرُوحِ مُدبِّرٍ عَضِّدّنِى فأعْلمِ الأثَمَةَ طُرُقكَ، والمنَافِقونَ إليْكَ يَرجعونَ، نَجِّنِى مِنَ الدِّماء يا الله إلَه خَلاصِى، فيَبتَّهجُ لِسانِى ببرَّكَ. يَاربِّ إفْتَح شَفتَىَّ فَيُخبرُ فَمِى بَتَسْبيحِكَ. لأنَّكَ لَوْ أثَرتَ الذَّبيحةَ، لَكُنْتُ الآنَ أعْطِى. ولَكنَّكَ لا تُسرُّ بالَمحْرقَاتِ، فالذَبيحَةُ للهِ رُوحَّ مُنْسحقَّ. القَلْبُ المنْكسِرُ والمتَواضِعُ لايُرْزلهُ الله، أنْعمْ يَا ربّ بِمَسرتكَ عَلى صِهْيُون، ولْتَبنِ أسْوَارَ أورْشَلِيم. حِينَئذٍ تُسرُّ بذَبائِح البَرِّ قرباناً ومُحْرقَات ويُقَّربون عَلى مَذابِحكَ العُجُول. هَلِّلُويا.
\ No newline at end of file
Index: app/src/main/java/baselyous/com/copticsmedia/recources/ResourceManagement.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/baselyous/com/copticsmedia/recources/ResourceManagement.java	(revision 12569bed0817ee22fb5541a039243671cbc0a289)
+++ app/src/main/java/baselyous/com/copticsmedia/recources/ResourceManagement.java	(revision )
@@ -30,37 +30,64 @@
                     (task.isEmpty() ? "" : task + "/") +
                     (language.isEmpty() ? "" : language + "/") +
                     (taskContentFolder.isEmpty() ? "" : taskContentFolder);
+
             Log.i("reached get media ", filePath);
             String[] list = assets.list(filePath);
             for (String fileName : list) {
                 if (!fileName.equals("salawat.txt")) {
-                    InputStream is = assets.open(filePath + "/" + fileName);
+
+                    if (task.equals("agpeya")) {
+                        getOneLangugeContents(contents, filePath, fileName, assets);
+                    } else if (task.equals("kholagy")) {
+                        getCombinedLanguageContents(contents, filePath, fileName, assets);
+                    }
+                }
+            }
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        return contents;
+    }
+
+    private static void getCombinedLanguageContents(MediaContents contents, String filePath, String fileName, AssetManager assets) throws IOException {
+        getOneLangugeContents(contents, filePath, fileName, assets);
+        contents.addToCopticMediaList(getMedia(filePath + "/coptic_" + fileName, assets));
+        contents.addToLanguageCopticCombinedMediaList(getMedia(filePath + "/combined_" + fileName, assets));
+    }
+
+    private static Media getMedia(String filePath, AssetManager assets) {
-                    String str;
+        String str;
+        InputStream is = null;
-                    try {
-                        Media media = new Media();
+        try {
+            Media media = new Media();
+            is = assets.open(filePath);
+
-                        BufferedReader reader = new BufferedReader(new InputStreamReader(is));
-                        StringBuilder content = new StringBuilder();
-                        String title = reader.readLine();
-                        media.setTitle(title);
-                        content.append(title).append("\n");
-                        while ((str = reader.readLine()) != null) {
-                            content.append(str).append("\n");
-                            media.addToContentList(str);
-                        }
-                        media.setContent(content.toString());
+            BufferedReader reader = new BufferedReader(new InputStreamReader(is));
+            StringBuilder content = new StringBuilder();
+            String title = reader.readLine();
+            media.setTitle(title);
+            content.append(title).append("\n");
+            while ((str = reader.readLine()) != null) {
+                content.append(str).append("\n");
+                media.addToContentList(str);
+            }
+            media.setContent(content.toString());
-                        contents.addToMediaList(media);
+
+        } catch (IOException ignored) {
+
-                    } finally {
+        } finally {
+            if (is != null) {
-                        try {
-                            is.close();
+                try {
+                    is.close();
-                        } catch (Throwable ignore) {
+                } catch (IOException ignored) {
-                        }
-                    }
-                }
+                }
+            }
+        }
+        return null;
-            }
+    }
-        } catch (IOException e) {
-            e.printStackTrace();
-        }
-        return contents;
+
+    private static void getOneLangugeContents(MediaContents contents, String filePath, String fileName, AssetManager assets) throws IOException {
+        contents.addToLanguageMediaList(getMedia(filePath + "/" + fileName, assets));
     }
 
 
